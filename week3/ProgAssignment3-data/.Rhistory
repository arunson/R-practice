outcome2.state<-outcome2.state[!is.na(outcome2.state[[index]]),]
if(is.numeric(num)==TRUE){
print "1"
}else{
if(num=='best'){
num=1
}else if(num=='worst'){
num=nrow(outcome2.state)
}
}
## Return hospital name in that state with the given rank
## 30-day death rate
ii<-order(outcome2.state[[index]], outcome2.state[[2]])
outcome2.state[ii[num],2]
}
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
outcome2 <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
index<-0
if(outcome == "heart attack"){
print(11)
index<-11
}else if(outcome=="heart failure"){
print(17)
index<-17
}else if(outcome=="pneumonia"){
print(23)
index<-23
}
t<-table(outcome2$State)
if(!(state %in% names(t))){
stop("invalid state")
}
outcome2.state<-outcome2[outcome2$State %in% state,]
outcome2.state<-outcome2.state[!is.na(outcome2.state[[index]]),]
if(num=='best'){
print '1'
}else{
if(num=='best'){
num=1
}else if(num=='worst'){
num=nrow(outcome2.state)
}
}
## Return hospital name in that state with the given rank
## 30-day death rate
ii<-order(outcome2.state[[index]], outcome2.state[[2]])
outcome2.state[ii[num],2]
}
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
outcome2 <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
index<-0
if(outcome == "heart attack"){
print(11)
index<-11
}else if(outcome=="heart failure"){
print(17)
index<-17
}else if(outcome=="pneumonia"){
print(23)
index<-23
}
t<-table(outcome2$State)
if(!(state %in% names(t))){
stop("invalid state")
}
outcome2.state<-outcome2[outcome2$State %in% state,]
outcome2.state<-outcome2.state[!is.na(outcome2.state[[index]]),]
if(num=="best"){
num=1
}else if(num=="worst"){
num=nrow(outcome2.state)
}
## Return hospital name in that state with the given rank
## 30-day death rate
ii<-order(outcome2.state[[index]], outcome2.state[[2]])
outcome2.state[ii[num],2]
}
num<-NA
num
num="top"
num
num<-5
num
class(num)
num="top"
num>nrow(outcome2.state)
nrow(outcome2.state)
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
outcome2 <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
index<-0
if(outcome == "heart attack"){
print(11)
index<-11
}else if(outcome=="heart failure"){
print(17)
index<-17
}else if(outcome=="pneumonia"){
print(23)
index<-23
}
t<-table(outcome2$State)
if(!(state %in% names(t))){
stop("invalid state")
}
outcome2.state<-outcome2[outcome2$State %in% state,]
outcome2.state<-outcome2.state[!is.na(outcome2.state[[index]]),]
if(num=="best"){
num=1
}else if(num=="worst"){
num=nrow(outcome2.state)
}
## Return hospital name in that state with the given rank
## 30-day death rate
ii<-order(outcome2.state[[index]], outcome2.state[[2]])
ret <- NA
if(num<=nrow(outcome2.state))
ret <- outcome2.state[ii[num],2]
ret
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
t<-table(outcome2$State)
t
for (i in names(t)){print i;}
for (i in names(t)){print i}
for (i in names(t)) print i
t<-table(outcome2$State)
for (i in names(t)){
print i
}
t<-table(outcome2$State)
for (i in names(t)){
print i;
}
t<-table(outcome2$State)
for (i in names(t)){
print (i);
}
s<-split(outcome2,outcome2$State)
head(s)
str(s)
lapply(s,min)
nrows(s)
nrow(s)
class(s)
names(list)
s_small<-outcome2[1:10,]
s_small<-split(s_small,s_small$State)
s_small
outcome2$State[1:10]
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
?min
s<-split(outcome2, outcome2$State)
class(s[,11])
class(s)
class(s[11])
s<-split(outcome2[[11]], outcome2$State)
lapply(s,min)
lapply(s,min, na.rm=TRUE)
s2<-lapply(s,min, na.rm=TRUE)
ls.size(s2)
size(s2)
len(s2)
length(s)
length(s2)
s<-split(outcome2[[11]], outcome2$State)
s<-split(outcome2, outcome2$State)
s[[1,3]]
class(s)
s[[1]]
class(s[[1]])
class(s[[1]]$State)
s[[1]]$State
?split
?lapply
?split
names(s)
names(outcome2$State)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome2 <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
index<-0
if(outcome == "heart attack"){
#print(11)
index<-11
}else if(outcome=="heart failure"){
#print(17)
index<-17
}else if(outcome=="pneumonia"){
#print(23)
index<-23
}
## For each state, find the hospital of the given rank
t<-table(outcome2$State)
outcome2 <- outcome2[!is.na(outcome2[[index]]),]
outcome2.split<-split(outcome2,outcome2$State)
if(num=="best"){
num=1
}else if(num=="worst"){
num=nrow(outcome2)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
getHospital <- function(data,index, num){
ii<-order(data[[index]],data[[2]])
data[ii[num],2]
}
retHospital<-lapply(outcome2.split,getHospital,index=index,num=num)
data.frame(hospital=retHospital,state=names(outcome2.split))
}
head(rankall("heart attack", 20), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome2 <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
index<-0
if(outcome == "heart attack"){
#print(11)
index<-11
}else if(outcome=="heart failure"){
#print(17)
index<-17
}else if(outcome=="pneumonia"){
#print(23)
index<-23
}
## For each state, find the hospital of the given rank
t<-table(outcome2$State)
outcome2 <- outcome2[!is.na(outcome2[[index]]),]
outcome2.split<-split(outcome2,outcome2$State)
if(num=="best"){
num=1
}else if(num=="worst"){
num=nrow(outcome2)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
getHospital <- function(data,index, num){
ii<-order(data[[index]],data[[2]])
data[ii[num],2]
}
retHospital<-lapply(outcome2.split,getHospital,index=index,num=num)
#data.frame(hospital=retHospital,state=names(outcome2.split))
retHospital
}
head(rankall("heart attack", 20), 10)
s<-head(rankall("heart attack", 20), 10)
s
names(s)
data.frame(hospital=s,state=names(s))
cbind(hospital=s,state=names(s))
class(cbind(hospital=s,state=names(s)))
as.data.frame(cbind(hospital=s,state=names(s)))
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome2 <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
index<-0
if(outcome == "heart attack"){
#print(11)
index<-11
}else if(outcome=="heart failure"){
#print(17)
index<-17
}else if(outcome=="pneumonia"){
#print(23)
index<-23
}
## For each state, find the hospital of the given rank
t<-table(outcome2$State)
outcome2 <- outcome2[!is.na(outcome2[[index]]),]
outcome2.split<-split(outcome2,outcome2$State)
if(num=="best"){
num=1
}else if(num=="worst"){
num=nrow(outcome2)
}
## Return a data frame with the hospital names and the
## (abbreviated) state name
getHospital <- function(data,index, num){
ii<-order(data[[index]],data[[2]])
data[ii[num],2]
}
retHospital<-lapply(outcome2.split,getHospital,index=index,num=num)
as.data.frame(cbind(hospital=retHospital,state=names(retHospital)))
}
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
tail(rankall("heart failure"), 10)
rankall <- function(outcome, num = "best") {
## Read outcome data
outcome2 <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
index<-0
if(outcome == "heart attack"){
#print(11)
index<-11
}else if(outcome=="heart failure"){
#print(17)
index<-17
}else if(outcome=="pneumonia"){
#print(23)
index<-23
}
## For each state, find the hospital of the given rank
t<-table(outcome2$State)
outcome2 <- outcome2[!is.na(outcome2[[index]]),]
outcome2.split<-split(outcome2,outcome2$State)
## Return a data frame with the hospital names and the
## (abbreviated) state name
getHospital <- function(data,index, num){
if(num=="best"){
num=1
}else if(num=="worst"){
num=nrow(data)
}
ii<-order(data[[index]],data[[2]])
data[ii[num],2]
}
retHospital<-lapply(outcome2.split,getHospital,index=index,num=num)
as.data.frame(cbind(hospital=retHospital,state=names(retHospital)))
}
tail(rankall("heart failure"), 10)
tail(rankall("pneumonia", "worst"), 3)
head(rankall("heart attack", 20), 10)
source("http://spark-public.s3.amazonaws.com/compdata/scripts/submitscript.R")
submit()
submit()
submit()
rankhospital("TX", "heart failure", 4)
rankhospital <- function(state, outcome, num = "best") {
## Read outcome data
outcome2 <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
index<-0
if(outcome == "heart attack"){
#print(11)
index<-11
}else if(outcome=="heart failure"){
#print(17)
index<-17
}else if(outcome=="pneumonia"){
#print(23)
index<-23
}
t<-table(outcome2$State)
if(!(state %in% names(t))){
stop("invalid state")
}
outcome2.state<-outcome2[outcome2$State %in% state,]
outcome2.state<-outcome2.state[!is.na(outcome2.state[[index]]),]
if(num=="best"){
num=1
}else if(num=="worst"){
num=nrow(outcome2.state)
}
## Return hospital name in that state with the given rank
## 30-day death rate
ii<-order(outcome2.state[[index]], outcome2.state[[2]])
ret <- NA
if(num<=nrow(outcome2.state))
ret <- outcome2.state[ii[num],2]
ret
}
rankhospital("TX", "heart failure", 4)
rankhospital("MD", "heart attack", "worst")
rankhospital("MN", "heart attack", 5000)
submit()
submit()
submit()
submit()
best <- function(state, outcome) {
## Read outcome data
outcome2 <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
index<-0
if(outcome == "heart attack"){
print(11)
index<-11
}else if(outcome=="heart failure"){
print(17)
index<-17
}else if(outcome=="pneumonia"){
print(23)
index<-23
}
t<-table(outcome2$State)
if(!(state %in% names(t))){
stop("invalid state")
}
## Return hospital name in that state with lowest 30-day death
outcome2.state<-outcome2[outcome2$State %in% state,]
minimum <- min(outcome2.state[,index],na.rm=TRUE)
minimum.hospital<-outcome2.state[outcome2.state[,index]==minimum,"Hospital.Name"]
minimum.hospital<-minimum.hospital[!is.na(minimum.hospital)]
## rate
sort(minimum.hospital)[1]
}
best("TX", "heart attack")
best <- function(state, outcome) {
## Read outcome data
outcome2 <- read.csv("outcome-of-care-measures.csv",colClasses="character")
outcome2[,11]<-as.numeric(outcome2[,11])
outcome2[,17]<-as.numeric(outcome2[,17])
outcome2[,23]<-as.numeric(outcome2[,23])
## Check that state and outcome are valid
if (outcome != "heart attack" && outcome != "heart failure" && outcome != "pneumonia"){
stop("invalid outcome")
}
index<-0
if(outcome == "heart attack"){
#print(11)
index<-11
}else if(outcome=="heart failure"){
#print(17)
index<-17
}else if(outcome=="pneumonia"){
#print(23)
index<-23
}
t<-table(outcome2$State)
if(!(state %in% names(t))){
stop("invalid state")
}
## Return hospital name in that state with lowest 30-day death
outcome2.state<-outcome2[outcome2$State %in% state,]
minimum <- min(outcome2.state[,index],na.rm=TRUE)
minimum.hospital<-outcome2.state[outcome2.state[,index]==minimum,"Hospital.Name"]
minimum.hospital<-minimum.hospital[!is.na(minimum.hospital)]
## rate
sort(minimum.hospital)[1]
}
best("TX", "heart attack")
best("TX", "heart failure")
best("MD", "heart attack")
best("MD", "pneumonia")
best("BB", "heart attack")
best("NY", "hert attack")
submit(0)
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
